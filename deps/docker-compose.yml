version: '3.2'

services:
  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_DATABASE: local
      MONGO_INITDB_ROOT_USERNAME: local
      MONGO_INITDB_ROOT_PASSWORD: local
      MONGO_NON_ROOT_USERNAM: local
      MONGO_NON_ROOT_PASSWORD: local
    command: ["--bind_ip_all"]
    ports:
      - "27017:27017"

  user-api:
    build: ../
    container_name: user-api
    ports:
      - "8080:8080"
    environment:
      - MONGO_URI=mongodb://local:local@mongo:27017/local?authSource=admin
      - DATABASE=local
      - SNS_TOPIC=arn:aws:sns:us-east-1:000000000000:user_update_notify
      - AWS_REGION=us-east-1
    depends_on:
      - mongo

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - 4575:4575
      - 4576:4576
      - 8088:8080
    volumes:
      - "../aws:/docker-entrypoint-initaws.d"
    environment:
      - SERVICES=sns,sqs
      - HOSTNAME_EXTERNAL=localstack
      - DEFAULT_REGION=us-east-1
  ## LOGS CONTAINERS
  filebeat:
    hostname: filebeat
    build:
      context: ../logs/filebeat
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
      - ./filebeat/data:/usr/share/filebeat/data:rw                        # Persistence data
    links:
      - elasticsearch

  elasticsearch:
    build:
      context: ../logs/elasticsearch/
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - cluster.name=logging-cluster
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node

  kibana:
    build:
      context: ../logs/kibana/
    ports:
      - "5601:5601"
    environment:
      - "LOGGING_QUIET=true"
    depends_on:
      - elasticsearch